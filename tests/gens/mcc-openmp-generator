#!/bin/bash

if [ x@MCC_SUPPORT@ = xyes ];
then

common_includes="\
-I/homelocal/lcostero_local/odroid/REDO_volta/ompss_20162003/nanox_nuevo \
-I/homelocal/lcostero_local/odroid/REDO_volta/ompss_20162003/nanox_nuevo/src/core \
-I/homelocal/lcostero_local/odroid/REDO_volta/ompss_20162003/nanox_nuevo/src/apis/c \
-I/homelocal/lcostero_local/odroid/REDO_volta/ompss_20162003/nanox_nuevo/src/pms/openmp \
-I/homelocal/lcostero_local/odroid/REDO_volta/ompss_20162003/nanox_nuevo/src/apis/c \
$END"

VERSIONS="performance "
PLUGINS="plugins pms arch/unix-os arch/smp"

# debug_CPPFLAGS="-DNANOS_DEBUG_ENABLED ${common_includes} -include "config.h" -include "nanox-config.h"  "
# debug_CXXFLAGS="-O0 -g2 -fno-inline --debug -DVOLTA1"
# debug_LDFLAGS="-lcpufreq  "
# debug_LIBS=

# instrumentation_CPPFLAGS="-DNANOS_INSTRUMENTATION_ENABLED ${common_includes} -include "config.h" -include "nanox-config.h"  "
# instrumentation_CXXFLAGS="-O3 --instrument -DVOLTA1"
# instrumentation_LDFLAGS="-lcpufreq  "
# instrumentation_LIBS=

# instrumentation_debug_CPPFLAGS="-DNANOS_DEBUG_ENABLED -DNANOS_INSTRUMENTATION_ENABLED ${common_includes} -include "config.h" -include "nanox-config.h"  "
# instrumentation_debug_CXXFLAGS="-O0 -g2 -fno-inline --instrument --debug -DVOLTA1"
# instrumentation_debug_LDFLAGS="-lcpufreq  "
# instrumentation_debug_LIBS=

 performance_CPPFLAGS=" ${common_includes} -include "config.h" -include "nanox-config.h"  "
 performance_CXXFLAGS="-O3 -DVOLTA1"
 performance_LDFLAGS="-lcpufreq  "
 performance_LIBS=

# Common to all versions
cat << EOF
test_CC=""
test_CXX=""
EOF

# Specific to each version
compile_versions=
for version in performance ; do
  sh_version=$(tr_sh $version)
  compile_versions+="${sh_version} "
  for libdir in plugins pms arch/unix-os arch/smp core pms apis; do
    library_dir=/homelocal/lcostero_local/odroid/REDO_volta/ompss_20162003/nanox_nuevo/src/${libdir}/${version}/.libs
    eval "${sh_version}_LDFLAGS=\"\
-L${library_dir} -Wl,-rpath,${library_dir} \
\${${sh_version}_LDFLAGS}\""

    eval "${sh_version}_LD_LIBRARY_PATH=\"\
${library_dir}\
\${${sh_version}_LD_LIBRARY_PATH+:}\
\${${sh_version}_LD_LIBRARY_PATH}\""
  done

  eval "${sh_version}_LDFLAGS=\"\
 \
\${${sh_version}_LIBS} \
\${${sh_version}_LDFLAGS}\""

  eval "${sh_version}_ENV=\"
LD_LIBRARY_PATH=\${${sh_version}_LD_LIBRARY_PATH}:${LD_LIBRARY_PATH}\""

  cat << EOF
test_CPPFLAGS_${sh_version}="$(eval echo \${${sh_version}_CPPFLAGS} ${test_CPPFLAGS} )"
test_CFLAGS_${sh_version}="$(eval echo \${${sh_version}_CFLAGS} ${test_CFLAGS} -Wno-error )"
test_CXXFLAGS_${sh_version}="$(eval echo \${${sh_version}_CXXFLAGS} ${test_CXXFLAGS} -Wno-error )"
test_LDFLAGS_${sh_version}="$(eval echo \${${sh_version}_LDFLAGS} \${${sh_version}_LIBS} ${test_LDFLAGS})"
test_PLUGINS_${sh_version}="$(eval echo \${${sh_version}_PLUGINS})"
test_ENV_${sh_version}="$(eval echo \${${sh_version}_ENV} ${test_ENV})"
EOF

done # for version

cat << EOF
compile_versions="${compile_versions}"
$(/homelocal/lcostero_local/odroid/REDO_volta/ompss_20162003/nanox_nuevo/tests/gens/config.py $*)
EOF

else

cat <<EOF
test_ignore=yes
EOF

fi

